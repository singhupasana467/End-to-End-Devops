{"version":3,"sources":["services/taskServices.js","Tasks.js","App.js","index.js"],"names":["apiUrl","Tasks","Component","constructor","arguments","state","tasks","currentTask","handleChange","_ref","currentTarget","input","this","setState","value","handleSubmit","async","e","preventDefault","task","trim","data","title","axios","post","Array","isArray","error","console","handleUpdate","originalTasks","index","findIndex","_id","taskId","updatedTask","_objectSpread","completed","id","put","concat","handleDelete","delete","filter","response","get","log","render","safeTasks","_jsxs","children","_jsx","onSubmit","type","onChange","placeholder","length","map","style","textDecoration","cursor","onClick","App","className","Paper","elevation","TextField","variant","size","required","Button","color","Checkbox","checked","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.570ab553.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst apiUrl = \"http://devops.local/api/tasks\";\n;\n\nexport function getTasks() {\n  return axios.get(apiUrl);\n}\n\nexport function addTask(task) {\n  return axios.post(apiUrl, task);\n}\n\nexport function updateTask(id, task) {\n  return axios.put(`${apiUrl}/${id}`, task);\n}\n\nexport function deleteTask(id) {\n  return axios.delete(`${apiUrl}/${id}`);\n}\n","import { Component } from \"react\";\nimport {\n  addTask,\n  getTasks,\n  updateTask,\n  deleteTask,\n} from \"./services/taskServices\";\n\nclass Tasks extends Component {\n  state = { tasks: [], currentTask: \"\" };\n\n  async componentDidMount() {\n    try {\n      const response = await getTasks();\n      console.log(\"Raw response from getTasks:\", response);\n\n      const data = response?.data;\n      console.log(\"Extracted data:\", data);\n\n      const tasks = Array.isArray(data)\n        ? data\n        : Array.isArray(data?.tasks)\n        ? data.tasks\n        : [];\n\n      this.setState({ tasks });\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  }\n\n  handleChange = ({ currentTarget: input }) => {\n    this.setState({ currentTask: input.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { currentTask, tasks } = this.state;\n    if (!currentTask.trim()) return;\n\n    try {\n      const { data } = await addTask({ title: currentTask });\n      this.setState({\n        tasks: Array.isArray(tasks) ? [...tasks, data] : [data],\n        currentTask: \"\",\n      });\n    } catch (error) {\n      console.error(\"Add task failed:\", error);\n    }\n  };\n\n  handleUpdate = async (taskId) => {\n    const originalTasks = Array.isArray(this.state.tasks)\n      ? [...this.state.tasks]\n      : [];\n\n    try {\n      const index = originalTasks.findIndex((task) => task._id === taskId);\n      if (index === -1) return;\n\n      const updatedTask = {\n        ...originalTasks[index],\n        completed: !originalTasks[index].completed,\n      };\n\n      await updateTask(taskId, { completed: updatedTask.completed });\n\n      originalTasks[index] = updatedTask;\n      this.setState({ tasks: originalTasks });\n    } catch (error) {\n      console.error(\"Update task failed:\", error);\n    }\n  };\n\n  handleDelete = async (taskId) => {\n    const originalTasks = Array.isArray(this.state.tasks)\n      ? [...this.state.tasks]\n      : [];\n\n    try {\n      await deleteTask(taskId);\n      const tasks = originalTasks.filter((task) => task._id !== taskId);\n      this.setState({ tasks });\n    } catch (error) {\n      console.error(\"Delete task failed:\", error);\n    }\n  };\n\n  render() {\n    const { tasks, currentTask } = this.state;\n    const safeTasks = Array.isArray(tasks) ? tasks : [];\n\n    return (\n      <div>\n        <h2>Task List</h2>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            value={currentTask}\n            onChange={this.handleChange}\n            placeholder=\"Enter new task\"\n          />\n          <button type=\"submit\">Add Task</button>\n        </form>\n\n        <ul>\n          {safeTasks.length > 0 ? (\n            safeTasks.map((task) => (\n              <li key={task._id}>\n                <span\n                  style={{\n                    textDecoration: task.completed ? \"line-through\" : \"none\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => this.handleUpdate(task._id)}\n                >\n                  {task.title}\n                </span>\n                <button onClick={() => this.handleDelete(task._id)}>\n                  Delete\n                </button>\n              </li>\n            ))\n          ) : (\n            <li>No tasks available</li>\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Tasks;","import React from \"react\";\nimport Tasks from \"./Tasks\";\nimport { Paper, TextField, Checkbox, Button } from \"@material-ui/core\";\nimport \"./App.css\"; // Update your CSS file accordingly\n\nclass App extends Tasks {\n    state = { tasks: [], currentTask: \"\" };\n\n    render() {\n        const { tasks, currentTask } = this.state;\n        return (\n            <div className=\"app\">\n                <header className=\"app-header\">\n                    <h1>My To-Do List</h1>\n                </header>\n                <div className=\"main-content\">\n                    <Paper elevation={3} className=\"todo-container\">\n                        <form onSubmit={this.handleSubmit} className=\"task-form\">\n                            <TextField\n                                variant=\"outlined\"\n                                size=\"small\"\n                                className=\"task-input\"\n                                value={currentTask}\n                                required={true}\n                                onChange={this.handleChange}\n                                placeholder=\"Add New TO-DO\"\n                            />\n                            <Button className=\"add-task-btn\" color=\"primary\" variant=\"outlined\" type=\"submit\">\n                                Add Task\n                            </Button>\n                        </form>\n                        <div className=\"tasks-list\">\n                            {tasks.map((task) => (\n                                <Paper key={task._id} className=\"task-item\">\n                                    <Checkbox\n                                        checked={task.completed}\n                                        onClick={() => this.handleUpdate(task._id)}\n                                        color=\"primary\"\n                                    />\n                                    <div className={task.completed ? \"task-text completed\" : \"task-text\"}>\n                                        {task.task}\n                                    </div>\n                                    <Button onClick={() => this.handleDelete(task._id)} color=\"secondary\" className=\"delete-task-btn\">\n                                        Delete\n                                    </Button>\n                                </Paper>\n                            ))}\n                        </div>\n                    </Paper>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <div className=\"app-wrapper\">\n            <App />\n        </div>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}