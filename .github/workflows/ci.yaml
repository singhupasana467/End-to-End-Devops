name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted
    env:
      IMAGE_FRONTEND: ${{ secrets.DOCKER_USERNAME }}/devops-frontend
      IMAGE_BACKEND: ${{ secrets.DOCKER_USERNAME }}/devops-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t $IMAGE_FRONTEND:latest ./Application-Code/frontend
          docker push $IMAGE_FRONTEND:latest

      - name: Build and push backend Docker image
        run: |
          docker build -t $IMAGE_BACKEND:latest ./Application-Code/backend
          docker push $IMAGE_BACKEND:latest

      - name: Set up kubeconfig
        shell: powershell
        run: |
          if (-Not (Test-Path "$HOME\.kube")) {
            New-Item -ItemType Directory -Path "$HOME\.kube" | Out-Null
          }
          $decoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("${{ secrets.KUBE_CONFIG }}"))
          Set-Content -Path "$HOME\.kube\config" -Value $decoded

      - name: Deploy Frontend via Helm
        run: |
          helm upgrade --install frontend ./helm/frontend-chart --namespace dev --create-namespace

      - name: Deploy Backend via Helm
        run: |
          helm upgrade --install backend ./helm/backend-chart --namespace dev --create-namespace

      - name: Deploy MongoDB via Helm
        run: |
          helm upgrade --install mongodb ./helm/mongodb-chart --namespace dev --create-namespace

      - name: Deploy Ingress via Helm
        run: |
          helm upgrade --install ingress ./helm/ingress-chart --namespace dev --create-namespace


      - name: Install Prometheus via Helm
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm upgrade --install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace

      - name: Install Grafana via Helm
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
          helm upgrade --install grafana grafana/grafana --namespace monitoring --create-namespace `
            --set adminUser=admin `
            --set adminPassword=${{ secrets.GRAFANA_PASSWORD }} `
            --set service.type=ClusterIP
